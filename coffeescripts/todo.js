// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    window.Todo = (function(_super) {

      __extends(Todo, _super);

      function Todo() {
        return Todo.__super__.constructor.apply(this, arguments);
      }

      Todo.prototype.defaults = {
        title: "empty todo...",
        done: false
      };

      Todo.prototype.toggle = function() {
        return this.set("done", !this.get("done"));
      };

      Todo.prototype.clear = function() {
        return this.destroy();
      };

      return Todo;

    })(Backbone.Model);
    window.TodoList = (function(_super) {

      __extends(TodoList, _super);

      function TodoList() {
        return TodoList.__super__.constructor.apply(this, arguments);
      }

      TodoList.prototype.model = Todo;

      TodoList.prototype.localStorage = new Backbone.LocalStorage("todo");

      return TodoList;

    })(Backbone.Collection);
    window.Todos = new TodoList();
    window.TodoView = (function(_super) {

      __extends(TodoView, _super);

      function TodoView() {
        return TodoView.__super__.constructor.apply(this, arguments);
      }

      TodoView.prototype.template = Handlebars.templates.todo;

      TodoView.prototype.events = {
        'click .destroy': 'clear'
      };

      TodoView.prototype.initialize = function() {
        return this.model.on("all", this.render, this);
      };

      TodoView.prototype.clear = function() {
        this.model.clear();
        return this.remove();
      };

      TodoView.prototype.render = function() {
        this.$el.html(this.template(this.model.toJSON()));
        return this;
      };

      return TodoView;

    })(Backbone.View);
    window.AppView = (function(_super) {

      __extends(AppView, _super);

      function AppView() {
        return AppView.__super__.constructor.apply(this, arguments);
      }

      AppView.prototype.template = Handlebars.templates.app;

      AppView.prototype.events = {
        'keypress #new-todo': 'createOnEnter'
      };

      AppView.prototype.createOnEnter = function(e) {
        if (e.keyCode === 13) {
          Todos.create({
            title: this.input.val()
          });
          return this.input.val('');
        }
      };

      AppView.prototype.initialize = function() {
        this.input = $("#new-todo");
        this.footer = $("footer");
        Todos.on("all", this.render, this);
        Todos.on("fetched", this.addAll, this);
        Todos.on("add", this.addOne, this);
        Todos.fetch();
        return Todos.trigger("fetched");
      };

      AppView.prototype.addOne = function(todo) {
        var view;
        view = new TodoView({
          model: todo
        });
        return $("#todo-list").append(view.render().el);
      };

      AppView.prototype.addAll = function() {
        return Todos.each(this.addOne);
      };

      AppView.prototype.render = function() {
        return this.footer.html(this.template({
          done: Todos.length
        }));
      };

      return AppView;

    })(Backbone.View);
    return window.App = new AppView({
      el: $("#todo-app")
    });
  });

}).call(this);
